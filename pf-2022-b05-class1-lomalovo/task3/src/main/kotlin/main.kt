/*
 * В решениях следующих заданий предполагается использование if- и when-выражений:
 * - https://kotlinlang.org/docs/control-flow.html#if-expression
 * - https://kotlinlang.org/docs/control-flow.html#when-expression
 * Могут также понадобиться функции из https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.math/.
 * Прежде чем приступать к выполнению заданий, допишите к ним тесты.
 */

/*
 * Задание 3.1. Для данного вещественного x найти значение следующей функции f, принимающей значения целого типа:
 * 	        0,	если x < 0,
 * f(x) = 	1,	если x принадлежит [0, 1), [2, 3), …,
           −1,	если x принадлежит [1, 2), [3, 4), … .
 */
fun f(x: Double): Double = if (x<0.0) 0.0 else if (x.toInt() % 2.0 == 1.0) -1.0 else 1.0

/*
 * Задание 3.2. Дан номер года (положительное целое число). Определить количество дней в этом году,
 * учитывая, что обычный год насчитывает 365 дней, а високосный — 366 дней. Високосным считается год,
 * делящийся на 4, за исключением тех годов, которые делятся на 100 и не делятся на 400
 * (например, годы 300, 1300 и 1900 не являются високосными, а 1200 и 2000 — являются).
 */
fun numberOfDays(year: Int): Int {
    if ((year%4 == 0) and (year % 100 != 0) or (year % 400 ==0)) return 366 else return 365
}

/*
 * Задание 3.3. Локатор ориентирован на одну из сторон света («С» — север, «З» — запад,
 * «Ю» — юг, «В» — восток) и может принимать три цифровые команды поворота:
 * 1 — поворот налево, −1 — поворот направо, 2 — поворот на 180°.
 * Дан символ C — исходная ориентация локатора и целые числа N1 и N2 — две посланные команды.
 * Вернуть ориентацию локатора после выполнения этих команд.
 */
fun rotate2(orientation: Char, cmd1: Int, cmd2: Int): Char { //Вообще я хотел решить эту задачу счетчиком по модулю 4, т.е. превратить буквы в цифры, а потом обратно, но реализовать это мешает то, что здесь зачем-то функция в функции, а также не ясно как это написать программу "в строчку" во внутренней функции, поэтому решил через "костыль"
    fun rotate1(orientation: Char, cmd1: Int): Char = if ((orientation == 'С') and (cmd1 == 1)) 'З' else if ((orientation == 'С') and (cmd1 == -1)) 'В' else if ((orientation == 'С') and (cmd1 == 2)) 'Ю' else if ((orientation == 'З') and (cmd1 == 1)) 'Ю' else if ((orientation == 'З') and (cmd1 == -1)) 'С' else if ((orientation == 'З') and (cmd1 == 2)) 'В' else if ((orientation == 'Ю') and (cmd1 == 1)) 'В' else if ((orientation == 'Ю') and (cmd1 == -1)) 'З' else if ((orientation == 'Ю') and (cmd1 == 2)) 'С' else if ((orientation == 'В') and (cmd1 == 1)) 'С' else if ((orientation == 'В') and (cmd1 == -1)) 'Ю' else 'З'
    return rotate1(rotate1(orientation,cmd1),cmd2)
}

/*
 * Задание 3.4. Дано целое число в диапазоне 20–69, определяющее возраст (в годах).
 * Вернуть строку-описание указанного возраста, обеспечив правильное согласование
 * числа со словом «год», например: 20 — «двадцать лет», 32 — «тридцать два года»,
 * 41 — «сорок один год».
 *
 * Пожалуйста, научитесь делать такие вещи очень аккуратно. Программное обеспечение
 * переполнено некорректными с точки зрения русского языка решениями.
 */
fun ageDescription(age: Int): String {
    var answer = ""
    when (age){
        in 20..29 -> answer+="двадцать "
        in 30..39 -> answer+="тридцать "
        in 40..49 -> answer+="сорок "
        in 50..59 -> answer+="пятьдесят "
        in 60..69 -> answer+="шестьдесят "
    }
    when (age%10){
        0 -> answer+="лет"
        1 -> answer+="один год"
        2 -> answer+="два года"
        3 -> answer+="три года"
        4 -> answer+="четыре года"
        5 -> answer+="пять лет"
        6 -> answer+="шесть лет"
        7 -> answer+="семь лет"
        8 -> answer+="восемь лет"
        9 -> answer+="девять лет"
    }
    return answer
}

fun main() {
    f(1.0)
}